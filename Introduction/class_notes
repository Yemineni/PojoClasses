Introduction:

1. Automation Tools
    1. bower
    2. Gulp
    3. Karma with Jasmine

2. What is AngularJS ??
3. Advantages Of AngularJS ??
4. Disadvantages Of AngularJS ??
5. key features of AngularJS ??
6. Comparision Of AngularJS - Angular5
                  AngularJS - reactJS
                  AngularJS - NodeJS

7. Interview Q&A



Automation Tools:
-----------------
    - we can build the ui applications by using automation tools.

    - automation tools decreases the development time and improves the
      productivity.


1. bower
    - bower is the automation tool used to download the required
      dependencies to develop web application.

    - bower based on nodejs.

installation of bower:
----------------------
    - we can install the bower by using following nodejs command.

> npm install -g bower


bower components:
-----------------
    - we have following bower component.

1. bower.json
-------------
{
    "name":"nareshit",
    "dependencies":{
        "angular":"latest",
        "bootstrap":"latest",
        "d3":"latest",
        "spark":"latest"
            --
            --
            --
    }
}

execution of bower component
----------------------------

>bower install

[Note : when ever we execute bower component(bower.json), automatically
        dependencies downloads to "bower_components" folder]


    *******************
Introduction
        bowerdemo
            bower.json
    ********************

Angular Framework path given by bower:
--------------------------------------
    - bower_components/angular/angular.min.js

Bootstrap framework path given by bower:
----------------------------------------
    - bower_components / bootstrap / dist / css / bootstrap.min.css


jQuery library path given by bower:
-----------------------------------
    - bower_components / jquery / dist / jquery.min.js


bower commands:
---------------
1. bower list
    it will show the available dependencies with versions in project

O/P:

├── angular#1.6.5
└─┬ bootstrap#3.3.7
  └── jquery#3.2.1


2. bower uninstall bootstrap --save

    it will remove the dependencies from application.

O/p:

    bower uninstall     bootstrap
    bower uninstall     jquery


3. bower install bootstrap --save

    - it will download the required dependency dynamically


4. bower init

    - this command used to initilize the bower component
     (bower.json)


Gulp:
----
    - Gulp is the production based tool.

    - Gulp used to prepare the production builds.

    - Gulp Based on NodeJS.

Advantages of Gulp:
-------------------
1. Gulp removes the comments

2. Gulp Disables the log

3. Gulp concat the files.

4. Gulp warmup the http servers.

5. Gulp launches the browsers.

6. Gulp uglifies the code (compressing the code).

    Ex.
        JS Code
        HTML Code
        CSS Code

7. Gulp will convert the LESS & SASS to CSS Files.

8. Gulp installs the bower.

9. Gulp will watch the front end application changes.

10. Gulp will provide modules support.

modules in Gulp:
----------------

1. gulp-concat
    - used to concat the files.

2. gulp-bower
    - used to install bower.

3. gulp-open
    - used to launch the browser.

4. gulp-uglify
    - used to uglifies the js code.

5. gulp-minify-html
    - used to minify the html code

6. gulp-minify-css
    - used to minify the css files.

7. gulp-watch
    - used to watch the front end application changes.


gulp component:
---------------
    - package.json file called as gulp component.

{
    "name":"nareshit",
    "version":"1.0.0",
    "description":"test gulp project",
    "dependencies":{
        "gulp-concat":"latest",
        "gulp-uglify":"latest",
            --
            --
            --
    }

}

execution of gulp component:
----------------------------

> npm install

[Note : when ever we execute the gulp component , automatically
        dependencies downloads to "node_modules" folder ]



installation of gulp:
---------------------
>npm install -g gulp


Steps to develop the gulp project
---------------------------------

1. prepare the directory structure
--------------
Introduction
        gulpdemo
                html
                    index_one.html
                    index_two.html

                css
                    style_one.css
                    style_two.css

                js
                    sample_one.js
                    sample_two.js

                bower.json
                index.html
---------------------------------

2. download the gulp modules by using package.json file.

{
    "name":"nareshit",
    "version":"1.0.0",
    "description":"basic gulp project",
    "dependencies":{
        "gulp" : "latest",
        "gulp-concat":"latest",
        "gulp-minify-html":"latest",
        "gulp-minify-css":"latest",
        "gulp-uglify":"latest",
        "gulp-bower":"latest",
        "gulp-open":"latest"
    }
}

>npm install

[Automatically all the modules downloads to node_modules folder]


Step 3:
    prepare the Gulp script

Gulpfile.js
-----------
//import modules(gulp modules)
var gulp = require("gulp");
var concat = require("gulp-concat");
var uglify = require("gulp-uglify");
var htmlMinify = require("gulp-minify-html");
var cssMinify = require("gulp-minify-css");
var bower = require("gulp-bower");
var open = require("gulp-open");

//create the task
gulp.task("task_one",function(){

    gulp.src("./gulpdemo/html/*.html")
        .pipe(concat("final.min.html"))
        .pipe(htmlMinify())
        .pipe(gulp.dest("./prodEnv/html"));

});


//create the task
gulp.task("task_two",function(){

    gulp.src("./gulpdemo/css/*.css")
        .pipe(concat("final.min.css"))
        .pipe(cssMinify())
        .pipe(gulp.dest("./prodEnv/css"));

});



//create the task
gulp.task("task_three",function(){

    gulp.src("./gulpdemo/js/*.js")
        .pipe(concat("final.min.js"))
        .pipe(uglify())
        .pipe(gulp.dest("./prodEnv/js"));

});



//create the task
gulp.task("bower",function(){
    return bower();
});


//create the task
gulp.task("open",function(){
    gulp.src("./gulpdemo/index.html")
        .pipe(open());
});


//create the default task
gulp.task("default",
          ["task_one","task_two","task_three","bower","open"],
          function(){

});


Step 4:
------
Execute the Gulp Script

>gulp task_one  // execures task one

>gulp task_two  // executes task two

>gulp task_three // executes task three

>gulp bower    // executes bower

>gulp open    // executes open

>gulp        // default task










What is AngularJS ??

    - AngularJS is the client side javascript framework.

    - AngularJS Follows MVC Design pattern.
        M - Model

        Ex.
            javascript variables called as Model in AngularJS.

            var data = "Data From DataBase Soon....!";

        [Note : where "data" variable called as Model in AngularJS ]

        V - View

            we can use HTML / HTML5 / JADE As the View in AngularJS.


        C - Controller

            Ex.
                javascript functions called as controllers in AngularJS.
            function getData(){
                //Business Logic

            }

        [Note : where getData() called as controller in AngularJS ]


    - The Vendor for the AngularJS is Google


Advantages Of AngularJS
-----------------------
1. AngularJS Supports Modules.

[Note : collection of predefined classes called as Module]


1.ngAnimate
    - this module used to develop the Animations.


2. ngMessages
    - this module used to handle the client side form validations.

3. ngStorage
    - this module used to work with the Storages.
    - we have two types of client side storages(browser storages)

        1. local Storage
        2. session Storage


4. ngRoute
    - this module used to implement the Routing in Single Page Application.

    - this module is the Native Module(Predefined Module)

    - now a days no body using the ngRoute Module to implement
      the Routing in Single Page Application.


5. ui.router
    - this module is the 3rd party module.

    - this module used to implement the Routing in Single Page Application.

    - now a days all most all the projects using ui.router module becuase of
      it's advantages.

[Note : loading the "target template" to "source template" without
        refreshing whole webpage called as "Single Page Application"]


[Note : loading the "target template" to "source template" in
        single page application called as "Routing" ]


Ex.
    implement the angular application with the following features

    1. SPA - ui.router    (ui.router)
    2. Animations         (ngAnimate)
    3. Storages Support     (ngStorage)
    4. Validations Support  (ngMessages)

index.html
----------
<!DOCTYPE html>
<html ng-app="app">

    //Logic Goes Here

  <script
     src=
  "http://ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.min.js"></script>

    <script>
        var app = angular.module("app",["ui.router",
                                        "ngAnimate",
                                        "ngStorage",
                                        "ngMessages"]);
    </script>
</html>


- ng-app called as predefined directive in angularjs

- ng-app directive used to assign the logical name angular application.

- directives in angularjs, enhances the HTML Capabilities.

- "angular" is the predefined class in "angular.min.js"

- module is the function in angular class and returns the javascript
  object.


2. As a Angular Developer we can directly work with the HTML DOM.

DOM Stands for "Document Object Model" and created by browser engine.


Ex.
    copy the data from "one div" to
    "another div" by using HTML & JavaScript


index.html
----------
<!DOCTYPE html>
<html>
    <div id="first_div">Hello</div>
    <div id="second_div"></div>
    <script>
        document.getElementById("second_div").innerHTML=
        document.getElementById("first_div").value;
    </script>
</html>

[ As a HTML & JavaScript Developer , we can manipulate the DOM
  with the Help of JavaScript ]


Ex.
    copy the data from "one div" to "another div" by using angularjs.

index.html
----------
<!DOCTYPE html>
<html ng-app>
    <div ng-model="first_div">Hello</div>
    <div ng-bind="first_div"></div>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/
        1.6.0/angular.min.js"></script>
</html>

- angular framework starts the execution from ng-app directive.

- ng-model directive creates the objects in heap memory with application data.

- ng-bind directive binds the application data(Model Data) to view


[Note : As a Angular Developer, we can directly manipulate the DOM
        without depending on JavaScript]


3. AngularJS Supports Two Way Data Binding

    - Automatic Data Synchronization Between "Model and View" with the
      Super Vision Of "Controller" called as Two Way data binding


in the above diagram we have following server calls

1. http get request

2. http delete request

3. AJAX call

1. http get request
-------------------
    - used to fetch the data from database.

2. http delete request
----------------------
    - used to delete a particular resource from database.

3. AJAX call
------------
    - used to sync the data between view and database.


[Note : As a programming languages developer we must make
        above three server calls to application requirement ]


[Note : As a AngularJS/Angular2/Angular4 developer , we can make
        only two server calls to meet application requirement because
        of two way data binding]


[Note : "Two Way Data Binding" Reduces the Burden on Server]



4. AngularJS Reduces the Burden On Server

    [ As a Angular Developer, we are implementing business components
      At client side Automatically we are able reduce the Burden on Server]



5. Open Source Code
    - As a Angular Developer we can customize the framework accroding
      to Application requirement.



Disadvantages of AngularJS:
---------------------------
1. Understanding the Angular Applications are difficult because of
   no coding standards given by vendors.


2. Security
    we are implementing business components at client side, so we
    are missing the secuirity by using ui technologies.

3. browser should enable the javascript.


Features Of AngularJS
---------------------
1. single page applications
    - loading "one template" to "another template" with out refreshing the
      "whole web page" called as "Single Page Application".


2. Routing
    - Loading "Target Template" to "Source Template" in single page application
      called as Routing.

    - AngularJS Supports Routing

    - We can Implement the Routing by using following Modules.
        1. ngRoute
        2. ui.router


3. Directives
    - Directives in AngularJS Enhances the HTML Capabilities.
    - We have two types of Directives
        1. predefined directives
        2. custom directives


4. services

    - Services can share the common business logic to multiple number
      of controllers

    - By using Services we can reuse the business logic

    - By using Services we can overcome the Data Redundancy.

    - we have two types of services.

        1. predefined services

        2. custom services


5. filters

    - filters are used to format the application data accroding to Application
      Requirement.

    - we have two types of filters

        1. predefined filters

        2. custom filters



























